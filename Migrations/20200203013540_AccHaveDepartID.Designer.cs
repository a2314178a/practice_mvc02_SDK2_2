// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practice_mvc02.Repositories;

namespace practice_mvc02.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20200203013540_AccHaveDepartID")]
    partial class AccHaveDepartID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("practice_mvc02.Models.dataTable.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("account")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("authority")
                        .HasColumnType("int");

                    b.Property<DateTime>("createTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("departmentID")
                        .HasColumnType("int");

                    b.Property<string>("loginTime")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("updateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("userName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("whoCreateAccID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("account")
                        .IsUnique();

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("practice_mvc02.Models.dataTable.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("department")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("whoCreateAccID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("practice_mvc02.Models.dataTable.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("departmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("whoCreateAccID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
